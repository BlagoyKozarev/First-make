// <auto-generated />
using System;
using Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251020131154_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("Api.Data.CachedMatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BoqItemName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CandidatesJson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_CachedMatch_CreatedAt");

                    b.HasIndex("BoqItemName", "Unit")
                        .HasDatabaseName("IX_CachedMatch_BoqItemName_Unit");

                    b.ToTable("CachedMatches");
                });

            modelBuilder.Entity("Api.Data.SessionData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BoqDataJson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SourceFileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_SessionData_CreatedAt");

                    b.ToTable("SessionData");
                });

            modelBuilder.Entity("Api.Data.UserApproval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ApprovedAt")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("TEXT");

                    b.Property<string>("BoqItemId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BoqItemName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("MatchScore")
                        .HasColumnType("REAL");

                    b.Property<string>("SelectedCatalogueItemId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SelectedCatalogueItemName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BoqItemId")
                        .HasDatabaseName("IX_UserApproval_BoqItemId");

                    b.HasIndex("SessionId")
                        .HasDatabaseName("IX_UserApproval_SessionId");

                    b.ToTable("UserApprovals");
                });
#pragma warning restore 612, 618
        }
    }
}
